package com.assignment.problems;

import java.util.concurrent.Exchanger;

class Checker implements Runnable{
    Exchanger<Integer> ex;
    Checker(Exchanger<Integer> ex){
    	this.ex=ex;
    	new Thread(this).start();
    }
    int maxcount=10,amount;
	public void run() {
		for(int ind=0;ind<5;ind++) {
		for(int i=0;i<10;i++) {
			amount++;
			if(amount==maxcount) {
				try {
				
					System.out.println("box is full with "+amount+" bulbs");
					ex.exchange(amount);
					System.out.println(amount);
				} catch (InterruptedException e) {
					
					e.printStackTrace();
				}
			}
		}
		}
	}
}
class Packer implements Runnable{
	Exchanger<Integer> ex;
	
    Packer(Exchanger<Integer> ex){
    	this.ex=ex;
    	new Thread(this).start();
    }
	public void run() {
		
		for(int ind=0;ind<5;ind++) {
		try {
			ex.exchange(0);
			System.out.println("Received");
			
		} catch (InterruptedException e) {
			
			e.printStackTrace();
		}
		}
	}
	
}
public class ExchangeProblem {

	public static void main(String[] args) {
		Exchanger<Integer> ex=new Exchanger<Integer>();
		new Checker(ex);
		new Packer(ex);

	}

}
